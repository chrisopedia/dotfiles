#!/usr/bin/env bash

# shellcheck source=/dev/null
source "$DOTFILES_DIRECTORY/lib/logger"
# shellcheck source=/dev/null
source "$DOTFILES_DIRECTORY/lib/utils"

# @private
# @requires logger (local)
# @requires npm
_upgrade_node() {
	print_process "Clearing cache for NPM"
	npm cache clean -f
	print_process "Setting Node to latest stable release"
	n stable

	[[ $? ]] \
		&& print_success "Node updated"
}

# @private
# @requires logger (local)
# @requires npm
_npm_package() {
	local package=$1

	# Test whether npm package is already installed
	print_process "Checking if $package is installed"
	if ! npm list -g "$package" | grep "$package" &> /dev/null; then
		print_process "Installing $package"
		npm install --global --quiet "$package"
	else
		print_process "$package is already installed. Updating."
		npm update "$package"
	fi
}

# @public
# @requires logger (local)
# @requires bulk_install (local)
# @requires npm
# @requires n
# @param $file - path to file where packages are listed out
install_packages() {
	local file=$1

	print_process "Installing and updating npm packages"

	is_required n "n is required to update Node & NPM" https://github.com/tj/n \
		&& _upgrade_node

	is_required npm "npm is required to install packages" https://www.npmjs.org \
		&& bulk_install _npm_package "$file"

	[[ $? ]] \
		&& print_success "Node & NPM have been updated, all packages have been upgraded, and all new packages have been installed"
}
