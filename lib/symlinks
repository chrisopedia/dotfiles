#!/usr/bin/env bash

# shellcheck source=/dev/null
source "$DOTFILES_DIRECTORY/lib/logger"
# shellcheck source=/dev/null
source "$DOTFILES_DIRECTORY/lib/utils"

# @private
# @requires logger (local)
# @param $file - path to file where symlinks are listed out
_symlink() {
	local file=$1
	# split input on space, and return 2nd part (the symbolic link desired)
	local symbolic_link="$(echo "$file" | cut -d ' ' -f 2)"

	# Test whether a symbolic link already exists
	print_process "Checking if $symbolic_link is symlinked"
	if [[ ! -L "$symbolic_link" ]]; then
		# set IFS back to space to split string on
		IFS=$' '
		# create symbolic link
		# create an array of line items
		symlink=("$file")
		print_process "Symlinking $symbolic_link"
		ln -sfn "$DOTFILES_DIRECTORY/${symlink[0]}" "$HOME/${symlink[1]}"
	else
		print_info "$symbolic_link is already symlinked. Skipping."
	fi
}

# @public
# @requires bulk_install (local)
# @param $file - path to file where symlinks are listed out
symlink_files() {
	local file=$1

	is_a_file "$DOTFILES_DIRECTORY/opt/symlinks"

	print_process "Symlinking configuration files"
	bulk_install _symlink "$file"

	[[ $? ]] \
		&& print_success "Symlinked configuration files"
}
